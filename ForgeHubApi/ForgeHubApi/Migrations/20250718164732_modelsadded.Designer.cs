// <auto-generated />
using System;
using ForgeHubApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForgeHubApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250718164732_modelsadded")]
    partial class modelsadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForgeHubApi.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("GoogleAuthSecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RgStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ForgeHubProj.Models.FinalizedQuotation", b =>
                {
                    b.Property<int>("FinalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalId"));

                    b.Property<DateTime?>("FinalizedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuotationId")
                        .HasColumnType("int");

                    b.Property<int>("RFQId")
                        .HasColumnType("int");

                    b.HasKey("FinalId");

                    b.HasIndex("QuotationId")
                        .IsUnique();

                    b.HasIndex("RFQId")
                        .IsUnique();

                    b.ToTable("FinalizedQuotations");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQ", b =>
                {
                    b.Property<int>("RFQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RFQId"));

                    b.Property<DateTime?>("BidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDateofBid")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFQLineNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFQNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReqDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReqQty")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RFQId");

                    b.HasIndex("BuyerId");

                    b.ToTable("RFQs");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQQuotation", b =>
                {
                    b.Property<int>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuotationId"));

                    b.Property<string>("BidNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("QuotedAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RFQId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("QuotationId");

                    b.HasIndex("RFQId");

                    b.HasIndex("VendorId");

                    b.ToTable("RFQQuotations");
                });

            modelBuilder.Entity("ForgeHubProj.Models.FinalizedQuotation", b =>
                {
                    b.HasOne("ForgeHubProj.Models.RFQQuotation", "RFQQuotation")
                        .WithOne("FinalizedQuotation")
                        .HasForeignKey("ForgeHubProj.Models.FinalizedQuotation", "QuotationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForgeHubProj.Models.RFQ", "RFQ")
                        .WithOne("FinalizedQuotation")
                        .HasForeignKey("ForgeHubProj.Models.FinalizedQuotation", "RFQId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RFQ");

                    b.Navigation("RFQQuotation");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQ", b =>
                {
                    b.HasOne("ForgeHubApi.Models.Users", "Buyer")
                        .WithMany("RFQs")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQQuotation", b =>
                {
                    b.HasOne("ForgeHubProj.Models.RFQ", "RFQ")
                        .WithMany("RFQQuotations")
                        .HasForeignKey("RFQId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForgeHubApi.Models.Users", "Vendor")
                        .WithMany("RFQQuotations")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RFQ");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ForgeHubApi.Models.Users", b =>
                {
                    b.Navigation("RFQQuotations");

                    b.Navigation("RFQs");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQ", b =>
                {
                    b.Navigation("FinalizedQuotation")
                        .IsRequired();

                    b.Navigation("RFQQuotations");
                });

            modelBuilder.Entity("ForgeHubProj.Models.RFQQuotation", b =>
                {
                    b.Navigation("FinalizedQuotation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
